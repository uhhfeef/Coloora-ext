{"version":3,"file":"colorwheel.bundle.js","mappings":"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","sources":["webpack://coloora-new-ext/./src/modules/gaAnalytics.js","webpack://coloora-new-ext/./src/modules/imageAnalysis.js","webpack://coloora-new-ext/./src/cs/colorWheel.js","webpack://coloora-new-ext/./src/modules/loadingBar.js"],"sourcesContent":["var FLASK_ENDPOINT = 'https://coloora-400822.et.r.appspot.com/send-analytics';\r\n\r\nlet clientId;\r\n\r\nasync function getOrCreateClientId() {\r\n    if (clientId) {\r\n        return clientId;\r\n    }\r\n\r\n    const result = await chrome.storage.local.get('clientId');\r\n    clientId = result.clientId;\r\n\r\n    if (!clientId) {\r\n        // Generate a unique client ID, the actual value is not relevant\r\n        clientId = self.crypto.randomUUID();\r\n        console.log('generated clientid')\r\n        await chrome.storage.local.set({ clientId });\r\n    }\r\n\r\n    console.log(clientId)\r\n    return clientId;\r\n}\r\n\r\nasync function sendInitialEvent(eventName, elementId) {\r\n    console.log(\"inside gaanalytics\");\r\n    clientId = await getOrCreateClientId();\r\n    if (clientId !== \"a1e0c334-cbc9-43bf-8de0-16d4a4f89ab7\") {\r\n        try {\r\n            fetch(\r\n                FLASK_ENDPOINT,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        client_id: await getOrCreateClientId(),\r\n                        event_name: eventName,\r\n                        event_params: {\r\n                            id: elementId,\r\n                        },\r\n                    }),\r\n                }\r\n            );\r\n            console.log(\"event sent\");\r\n        }\r\n        catch (error) {\r\n            console.error(\"Error sending data to Flask server:\", error);\r\n        }\r\n    } else {\r\n        console.log(\"demo user, event not sent\");\r\n        return;\r\n    }\r\n}\r\n\r\nexport { sendInitialEvent };\r\n","import { sendInitialEvent } from './gaAnalytics';\r\n\r\n\r\nasync function extractImageFromPage(url) {\r\n    console.log('inside extract');\r\n    const response = await fetch(url); // Fetch the page\r\n    const text = await response.text(); // Get the page content as text\r\n    const parser = new DOMParser(); // Create a DOM parser\r\n    const doc = parser.parseFromString(text, 'text/html'); // Parse the page\r\n    const imgElements = doc.querySelectorAll('img'); // Find all image elements\r\n    // Return the first or second image's src attribute based on the OS\r\n    if (imgElements.length > 0) { \r\n        console.log('imgElements', imgElements);\r\n        if (navigator.platform.includes('Mac')) {\r\n            return imgElements[1].src;\r\n        } else {\r\n            return imgElements[0].src;\r\n        }\r\n    }\r\n    throw new Error('No images found');\r\n}\r\n\r\n// Analyze image function: Fetch, downsample, analyze, and draw\r\nfunction analyzeImage(imageUrl, sendInitialEvent, event, id, sendImageForAnalysis ) {\r\n    if (!imageUrl) {\r\n        return; // Terminate the function\r\n    }\r\n\r\n    // Check if the URL is a direct link to an image\r\n    if (!imageUrl.match(/\\.(jpeg|jpg|gif|png)(\\?|$)/)) {\r\n        extractImageFromPage(imageUrl) \r\n            .then(directImageUrl => {\r\n                sendInitialEvent(event, id); \r\n                sendImageForAnalysis(directImageUrl);\r\n            })\r\n            .catch(error => {\r\n                console.error('Failed to extract direct image URL:', error);\r\n            });\r\n    } else {\r\n        sendInitialEvent(event, id);\r\n        sendImageForAnalysis(imageUrl); \r\n    }\r\n}\r\n\r\nexport function fetchImageData(imageUrl, onSuccess, onError) {\r\n    console.log(\"inside imageanalysis.js\");\r\n    console.log(\"Sending image URL to Flask API:\", imageUrl);\r\n\r\n    const flaskApiEndpoint = \"https://coloora-400822.et.r.appspot.com/fetch-image\"; // prod\r\n\r\n    fetch(flaskApiEndpoint, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ imageURL: imageUrl })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        if (data.success && data.dataURL) {\r\n            onSuccess(data.dataURL);\r\n        } else {\r\n            onError('Image analysis failed: ' + data.error);\r\n        }\r\n    })\r\n    .catch(error => {\r\n        onError('Network error: ' + error.message);\r\n    });\r\n}\r\n\r\n// function checkDataTypes() {\r\n//     // Check for different types of data\r\n//     if (e.dataTransfer.types.includes('text/uri-list')) {\r\n//         // Handle URI list (common for links)\r\n//         const url = e.dataTransfer.getData('text/uri-list');\r\n//         console.log('Dropped URL:', url);\r\n//         // Display the image in the container\r\n//         imageContainer.innerHTML = `<img src=\"${url}\" alt=\"Dropped Image\" style=\"max-width: 100%; max-height: 150px;\">`;\r\n\r\n//         // Analyze the image\r\n//         analyzeImage(url);\r\n//     } else if (e.dataTransfer.types.includes('text/html')) {\r\n//         // Handle HTML (common for rich content)\r\n//         const htmlContent = e.dataTransfer.getData('text/html');\r\n//         const doc = new DOMParser().parseFromString(htmlContent, 'text/html');\r\n//         const imgSrc = doc.querySelector('img') ? doc.querySelector('img').src : null;\r\n//         if (imgSrc) {\r\n//             console.log('Extracted Image URL from HTML:', imgSrc);\r\n//             // Display the image in the container\r\n//             imageContainer.innerHTML = `<img src=\"${url}\" alt=\"Dropped Image\" style=\"max-width: 100%; max-height: 150px;\">`;\r\n\r\n//             // Analyze the image\r\n//             analyzeImage(url);\r\n//         }\r\n//     } else if (e.dataTransfer.types.includes('text/plain')) {\r\n//         // Handle plain text (fallback)\r\n//         const url = e.dataTransfer.getData('text/plain');\r\n//         console.log('Extracted URL from text:', url);\r\n//         // Display the image in the container\r\n//         imageContainer.innerHTML = `<img src=\"${url}\" alt=\"Dropped Image\" style=\"max-width: 100%; max-height: 150px;\">`;\r\n\r\n//         // Analyze the image\r\n//         analyzeImage(url);\r\n//     }\r\n// }\r\n\r\n\r\nexport { extractImageFromPage,analyzeImage };","import { sendInitialEvent } from '../modules/gaAnalytics';\r\nimport { fetchImageData, extractImageFromPage, analyzeImage } from '../modules/imageAnalysis';\r\nimport { showLoadingGif, hideLoadingGif } from '../modules/loadingBar';\r\n\r\n// Constants and DOM elements\r\nvar canvas = document.createElement(\"canvas\");\r\ncanvas.id = \"colorWheel\";\r\nvar ctx_colorwheel;\r\nvar center_color_wheel;\r\nvar radius;\r\naddMessageListener()\r\n// Initialization: Setting up the UI\r\nfunction initializeUIWheel() {\r\n    console.log(\"Initializing UI...\");\r\n    // Create a container for the color wheel\r\n    const container = document.createElement('div');\r\n    container.className = 'coloora-container';\r\n    container.id = 'colorWheelContainer';\r\n\r\n    // Create close button\r\n    const closeButton = document.createElement('button');\r\n    closeButton.className = 'close-button';\r\n    closeButton.innerText = 'X';\r\n    closeButton.onclick = () => {\r\n        // document.body.removeChild(container);\r\n        container.style.visibility = 'hidden';\r\n    };\r\n    container.appendChild(closeButton);\r\n\r\n    // Drag and drop\r\n    let isDragging = false;\r\n    let initialMouseX, initialMouseY;\r\n    let initialContainerX, initialContainerY;\r\n\r\n    container.addEventListener('mousedown', (e) => {\r\n        isDragging = true;\r\n\r\n        // Record the initial mouse position\r\n        initialMouseX = e.clientX;\r\n        initialMouseY = e.clientY;\r\n\r\n        // Record the initial position of the container\r\n        // Adjusting for the transform offset\r\n        initialContainerX = container.getBoundingClientRect().left + (container.offsetWidth / 2);\r\n        initialContainerY = container.getBoundingClientRect().top;\r\n\r\n        window.addEventListener('mousemove', onMouseMove);\r\n        window.addEventListener('mouseup', onMouseUp);\r\n    });\r\n\r\n    function onMouseMove(e) {\r\n        if (!isDragging) return;\r\n\r\n        // Calculate the movement\r\n        let dx = e.clientX - initialMouseX;\r\n        let dy = e.clientY - initialMouseY;\r\n\r\n        // Apply the movement to the container's position, adjusting for the transform offset\r\n        container.style.left = `${initialContainerX + dx}px`;\r\n        container.style.top = `${initialContainerY + dy}px`;\r\n    }\r\n\r\n    function onMouseUp() {\r\n        window.removeEventListener('mousemove', onMouseMove);\r\n        window.removeEventListener('mouseup', onMouseUp);\r\n        isDragging = false;\r\n    }\r\n\r\n    // Set up the canvas\r\n    canvas.width = 250;   // Set canvas size\r\n    canvas.height = 250;\r\n    ctx_colorwheel = canvas.getContext(\"2d\");\r\n    center_color_wheel = { x: canvas.width / 2, y: canvas.height / 2 };\r\n    radius = canvas.width / 2;\r\n\r\n    canvas.style.border = 'none';\r\n    canvas.style.transition = 'background-color 0.3s'; // Smooth transition for background color\r\n\r\n    // Prevent default drag behavior\r\n    canvas.addEventListener('dragstart', function(e) {\r\n        e.preventDefault();\r\n    });\r\n\r\n    // Handle drag over event\r\n    canvas.addEventListener('dragover', function(e) {\r\n        e.preventDefault();\r\n        canvas.style.backgroundColor = 'rgba(128, 128, 128, 0.5)'; // Change background color\r\n        canvas.style.border = '2px dashed #ccc';\r\n    });\r\n\r\n    // Handle drag leave event\r\n    canvas.addEventListener('dragleave', function(e) {\r\n        canvas.style.backgroundColor = 'transparent'; // Revert background color\r\n        canvas.style.border = 'none';\r\n    });\r\n\r\n    // Handle drop event\r\n    canvas.addEventListener('drop', function(e) {\r\n        e.preventDefault();\r\n        canvas.style.border = 'none';\r\n        canvas.style.backgroundColor = 'transparent'; // Revert background color\r\n\r\n\r\n        // Create an image and draw it on the canvas\r\n        const img = new Image();\r\n        img.onload = function() {\r\n            ctx_colorwheel.clearRect(0, 0, canvas.width, canvas.height); // Clear the canvas\r\n            ctx_colorwheel.drawImage(img, 0, 0, canvas.width, canvas.height); // Draw the image\r\n        };\r\n        // Check for different types of data\r\n        if (e.dataTransfer.types.includes('text/uri-list')) {\r\n            // Handle URI list (common for links)\r\n            const url = e.dataTransfer.getData('text/uri-list');\r\n            console.log('Dropped URL:', url);\r\n\r\n            // Analyze the image\r\n            analyzeImage(\r\n                url,\r\n                sendInitialEvent,\r\n                'color_wheel_analysis',\r\n                \"analyzeButton\",\r\n                sendImageForAnalysis\r\n            );\r\n        } else if (e.dataTransfer.types.includes('text/html')) {\r\n            // Handle HTML (common for rich content)\r\n            const htmlContent = e.dataTransfer.getData('text/html');\r\n            const doc = new DOMParser().parseFromString(htmlContent, 'text/html');\r\n            const imgSrc = doc.querySelector('img') ? doc.querySelector('img').src : null;\r\n            if (imgSrc) {\r\n                console.log('Extracted Image URL from HTML:', imgSrc);\r\n\r\n                // Analyze the image\r\n                analyzeImage(\r\n                    url,\r\n                    sendInitialEvent,\r\n                    'color_wheel_analysis',\r\n                    \"analyzeButton\",\r\n                    sendImageForAnalysis\r\n                );\r\n            }\r\n        } else if (e.dataTransfer.types.includes('text/plain')) {\r\n            // Handle plain text (fallback)\r\n            const url = e.dataTransfer.getData('text/plain');\r\n            console.log('Extracted URL from text:', url);\r\n\r\n            // Analyze the image\r\n            analyzeImage(\r\n                url,\r\n                sendInitialEvent,\r\n                'color_wheel_analysis',\r\n                \"analyzeButton\",\r\n                sendImageForAnalysis\r\n            );\r\n        }\r\n    });\r\n    container.appendChild(canvas); // Append the canvas to the container\r\n\r\n    // Create label for color boxes\r\n    const label = document.createElement('label');\r\n    label.className = 'label';\r\n    label.innerText = 'Drag n drop any image here';\r\n    container.appendChild(label);\r\n\r\n    document.body.appendChild(container);\r\n    drawColorWheel();\r\n}\r\n\r\nfunction sendImageForAnalysis(imageUrl) {\r\n    showLoadingGif(\r\n        document.getElementById('colorWheelContainer'),\r\n        document.getElementById('colorWheel')\r\n    );\r\n\r\n    fetchImageData(imageUrl, (dataUrl) => {\r\n        handleImageLoad(dataUrl);\r\n        // Additional success logic if needed\r\n    }, (error) => {\r\n        console.error(error);\r\n        // Additional error handling logic if needed\r\n    });\r\n}\r\n\r\nfunction handleImageLoad(dataUrl) {\r\n    const img = new Image();\r\n    img.src = dataUrl;\r\n    img.onload = function () {\r\n        const colorData = downsampleAndAnalyzeColors(img);\r\n        drawColorWheel();  // Reset the color wheel\r\n        updateColorWheel(colorData);\r\n    }\r\n}\r\n\r\n\r\n// Downsample and analyze colors from an image\r\nfunction downsampleAndAnalyzeColors(img) {\r\n    const downsampledCanvas = document.createElement('canvas');\r\n    const downsampledCtx = downsampledCanvas.getContext('2d');\r\n    downsampledCanvas.width = 150;\r\n    downsampledCanvas.height = 150;\r\n    downsampledCtx.drawImage(img, 0, 0, downsampledCanvas.width, downsampledCanvas.height);\r\n\r\n    return analyzeColors(downsampledCtx, downsampledCanvas.width, downsampledCanvas.height);\r\n}\r\n\r\nfunction getColorByAngleAndRadius(angle, r, l) {\r\n    // Convert the angle to hue (0-360)\r\n    let hue = angle;\r\n\r\n    // Convert radius to saturation (0-100)\r\n    let saturation = (r / radius) * 100;\r\n\r\n    // Check if l is undefined\r\n    if (l === undefined) {\r\n        l = 50;\r\n    }\r\n\r\n    return `hsl(${hue}, ${saturation}%, ${l}%)`;\r\n}\r\n\r\nfunction drawColorWheel() {\r\n    // Clear the canvas\r\n    ctx_colorwheel.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    for (let angle = 0; angle < 360; angle++) {\r\n        for (let r = 0; r < radius; r++) {\r\n            ctx_colorwheel.beginPath();\r\n            ctx_colorwheel.strokeStyle = getColorByAngleAndRadius(angle, r);\r\n            ctx_colorwheel.arc(center_color_wheel.x, center_color_wheel.y, r, (angle - 0.5) * (Math.PI / 180), (angle + 0.5) * (Math.PI / 180));\r\n            ctx_colorwheel.stroke();\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction rgbToHsl(r, g, b) {\r\n    r /= 255, g /= 255, b /= 255;\r\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n    let h, s, l = (max + min) / 2;\r\n\r\n    if (max === min) {\r\n        h = s = 0;\r\n    } else {\r\n        let d = max - min;\r\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n        switch (max) {\r\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n            case g: h = (b - r) / d + 2; break;\r\n            case b: h = (r - g) / d + 4; break;\r\n        }\r\n        h /= 6;\r\n    }\r\n\r\n    return [h * 360, s * 100, l * 100];\r\n}\r\n\r\nfunction analyzeColors(ctx_colorwheel, width, height) {\r\n    const imageData = ctx_colorwheel.getImageData(0, 0, width, height).data;\r\n    const colorData = {};\r\n\r\n    for (let i = 0; i < imageData.length; i += 4) {\r\n        const r = imageData[i];\r\n        const g = imageData[i + 1];\r\n        const b = imageData[i + 2];\r\n        const [h, s, l] = rgbToHsl(r, g, b);\r\n\r\n        const hueKey = Math.round(h);\r\n        const satKey = Math.round(s);\r\n\r\n        if (!colorData[hueKey]) {\r\n            colorData[hueKey] = {};\r\n        }\r\n        if (!colorData[hueKey][satKey]) {\r\n            colorData[hueKey][satKey] = { count: 0, totalBrightness: 0 };\r\n        }\r\n        colorData[hueKey][satKey].count++;\r\n        colorData[hueKey][satKey].totalBrightness += l;\r\n    }\r\n\r\n    return colorData;\r\n}\r\n\r\nfunction updateColorWheel(colorData) {\r\n    console.log('Updating color wheel...');\r\n    for (let angle = 0; angle < 360; angle++) {\r\n        for (let r = 0; r < radius; r++) {\r\n            ctx_colorwheel.beginPath();\r\n\r\n            const hueData = colorData[angle];\r\n            const saturationValue = Math.round((r / radius) * 100);\r\n\r\n            if (hueData && hueData[saturationValue]) {\r\n                const avgBrightness = hueData[saturationValue].totalBrightness / hueData[saturationValue].count;\r\n                ctx_colorwheel.strokeStyle = getColorByAngleAndRadius(angle, saturationValue, avgBrightness);\r\n            } else {\r\n                ctx_colorwheel.strokeStyle = getColorByAngleAndRadius(angle, r, 10); // Reduced brightness to 10% for unmatched hues/saturations\r\n            }\r\n\r\n            ctx_colorwheel.arc(center_color_wheel.x, center_color_wheel.y, r, (angle - 0.5) * (Math.PI / 180), (angle + 0.5) * (Math.PI / 180));\r\n            ctx_colorwheel.stroke();\r\n        }\r\n    }\r\n    hideLoadingGif();\r\n}\r\n\r\nfunction shakeElement(element) {\r\n    console.log('Shake function called');\r\n    let shakes = 5;\r\n    let distance = 2; // in pixels\r\n\r\n    const originalMarginLeft = parseInt(window.getComputedStyle(element).marginLeft, 10) || 0;\r\n    const originalMarginRight = parseInt(window.getComputedStyle(element).marginRight, 10) || 0;\r\n\r\n    function animateShake() {\r\n        if (shakes === 0) {\r\n            element.style.marginLeft = `${originalMarginLeft}px`; // Reset to original margins\r\n            element.style.marginRight = `${originalMarginRight}px`;\r\n            return;\r\n        }\r\n\r\n        // Alternate direction for shaking effect\r\n        const offset = (shakes % 2 === 0) ? distance : -distance;\r\n        element.style.marginLeft = `${originalMarginLeft + offset}px`;\r\n        element.style.marginRight = `${originalMarginRight - offset}px`;\r\n\r\n        shakes -= 1;\r\n        setTimeout(animateShake, 50);\r\n    }\r\n\r\n    animateShake();\r\n}\r\n\r\n// This function will create the UI if it does not exist, or toggle its visibility\r\nfunction toggleUI() {\r\n    let colorWheelContainer = document.getElementById('colorWheelContainer');\r\n    console.log('inside toggle')\r\n\r\n    // Check if the UI exists\r\n    if (!colorWheelContainer) {\r\n        initializeUIWheel();\r\n    } else {\r\n        console.log('alraedy exists')\r\n        colorWheelContainer.style.visibility = 'visible';\r\n        // return; // Terminate the function\r\n    }\r\n}\r\n\r\n// flag to indicate if the listener has been added\r\nlet messageListenerAdded = false;\r\nconsole.log('message listener added');\r\n\r\nfunction addMessageListener() {\r\n  if (messageListenerAdded) return;\r\n\r\n  chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {\r\n    if (request.action === \"toggleColorWheel\") {\r\n      console.log('inside chrome runtime message listener in color wheel');\r\n      toggleUI();\r\n    }\r\n  });\r\n\r\n  messageListenerAdded = true;\r\n  console.log('message listener added');\r\n}\r\n\r\n\r\n// chrome.runtime.onMessage.removeListener(function(request, sender, sendResponse) {\r\n//     if (request.action === \"removeColorWheel\") {\r\n//         console.log('inside chrome runtime message listener for removal in color wheel');\r\n//         removeUI();","function showLoadingGif(container, element) {\r\n    var canvas = document.querySelector(\"canvas\");\r\n    console.log(\"entering showLoadingGif\");\r\n\r\n    // const colorWheelContainer = document.getElementById('colorWheelContainer');\r\n    // const colorWheelElement = document.getElementById('colorWheel');\r\n\r\n    const loadingGif = document.createElement('img');\r\n    loadingGif.id = 'extensionLoadingGif';\r\n    loadingGif.src = chrome.runtime.getURL('assets/gifs/loading-bar.gif');\r\n\r\n    loadingGif.width = 50;\r\n    loadingGif.height = 50;\r\n\r\n    loadingGif.style.display = 'block';\r\n    loadingGif.style.position = 'absolute';\r\n\r\n    // Calculate the center_color_wheel position of the canvas\r\n    const canvasRect = element.getBoundingClientRect();\r\n    const containerRect = container.getBoundingClientRect();\r\n\r\n    // Adjust gif's position based on canvas's position\r\n    loadingGif.style.left = `${canvasRect.left - containerRect.left + (canvas.width / 2) - (loadingGif.width / 2)}px`;\r\n    loadingGif.style.top = `${canvasRect.top - containerRect.top + (canvas.height / 2) - (loadingGif.height / 2)}px`;\r\n\r\n    loadingGif.style.zIndex = '9999'; // Ensure it's on top\r\n\r\n    colorWheelContainer.appendChild(loadingGif);\r\n\r\n    console.log(\"GIF appended\");\r\n    console.log(chrome.runtime.getURL('assets/gifs/loading-bar.gif'));\r\n}\r\n\r\nfunction hideLoadingGif() {\r\n    console.log(\"done loading\")\r\n    const gif = document.getElementById('extensionLoadingGif');\r\n    if (gif) {\r\n        gif.remove();\r\n    }\r\n}\r\n\r\nexport { showLoadingGif, hideLoadingGif };"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","clientId","FLASK_ENDPOINT","getOrCreateClientId","_getOrCreateClientId","_callee","result","_context","chrome","storage","local","get","crypto","randomUUID","console","log","set","sendInitialEvent","_x","_x2","_sendInitialEvent","_callee2","eventName","elementId","_context2","t0","fetch","t1","t2","t3","JSON","t4","t5","t6","id","t7","client_id","event_name","event_params","t8","stringify","t9","headers","body","t10","_extractImageFromPage","url","response","text","parser","doc","imgElements","DOMParser","parseFromString","querySelectorAll","navigator","platform","includes","src","analyzeImage","imageUrl","event","sendImageForAnalysis","match","extractImageFromPage","directImageUrl","ctx_colorwheel","center_color_wheel","radius","canvas","document","createElement","container","element","querySelector","loadingGif","runtime","getURL","width","height","style","display","position","canvasRect","getBoundingClientRect","containerRect","left","concat","top","zIndex","colorWheelContainer","appendChild","showLoadingGif","getElementById","onSuccess","onError","imageURL","json","data","success","dataURL","dataUrl","img","Image","onload","colorData","downsampledCanvas","downsampledCtx","getContext","drawImage","imageData","getImageData","_rgbToHsl2","_slicedToArray","rgbToHsl","hueKey","Math","round","satKey","count","totalBrightness","analyzeColors","downsampleAndAnalyzeColors","drawColorWheel","angle","beginPath","hueData","saturationValue","avgBrightness","strokeStyle","getColorByAngleAndRadius","arc","x","PI","stroke","gif","remove","hideLoadingGif","updateColorWheel","handleImageLoad","message","fetchImageData","saturation","clearRect","b","max","min","messageListenerAdded","onMessage","addListener","request","sender","sendResponse","action","visibility","className","closeButton","innerText","onclick","initialMouseX","initialMouseY","initialContainerX","initialContainerY","isDragging","onMouseMove","dx","clientX","dy","clientY","onMouseUp","window","removeEventListener","addEventListener","offsetWidth","border","transition","preventDefault","backgroundColor","dataTransfer","types","getData","htmlContent","imgSrc","label","initializeUIWheel","toggleUI"],"sourceRoot":""}