{"version":3,"file":"gradient.bundle.js","mappings":"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","sources":["webpack://coloora-new-ext/./src/modules/gaAnalytics.js","webpack://coloora-new-ext/./src/cs/gradient.js"],"sourcesContent":["var FLASK_ENDPOINT = 'https://coloora-400822.et.r.appspot.com/send-analytics';\r\n\r\nlet clientId;\r\n\r\nasync function getOrCreateClientId() {\r\n    if (clientId) {\r\n        return clientId;\r\n    }\r\n\r\n    const result = await chrome.storage.local.get('clientId');\r\n    clientId = result.clientId;\r\n\r\n    if (!clientId) {\r\n        // Generate a unique client ID, the actual value is not relevant\r\n        clientId = self.crypto.randomUUID();\r\n        console.log('generated clientid')\r\n        await chrome.storage.local.set({ clientId });\r\n    }\r\n\r\n    console.log(clientId)\r\n    return clientId;\r\n}\r\n\r\nasync function sendInitialEvent(eventName, elementId) {\r\n    console.log(\"inside gaanalytics\");\r\n    clientId = await getOrCreateClientId();\r\n    if (clientId !== \"a1e0c334-cbc9-43bf-8de0-16d4a4f89ab7\") {\r\n        try {\r\n            fetch(\r\n                FLASK_ENDPOINT,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        client_id: await getOrCreateClientId(),\r\n                        event_name: eventName,\r\n                        event_params: {\r\n                            id: elementId,\r\n                        },\r\n                    }),\r\n                }\r\n            );\r\n            console.log(\"event sent\");\r\n        }\r\n        catch (error) {\r\n            console.error(\"Error sending data to Flask server:\", error);\r\n        }\r\n    } else {\r\n        console.log(\"demo user, event not sent\");\r\n        return;\r\n    }\r\n}\r\n\r\nexport { sendInitialEvent };\r\n","import { sendInitialEvent } from '../modules/gaAnalytics';\r\n\r\n// sendInitialEvent('gradient_loaded', 'gradientContainer');\r\n\r\n// Initialization: Setting up the UI\r\nconsole.log(\"gradient base  loaded!\");\r\nlet imageUrlInputGradient = document.getElementById('imageUrl');\r\nlet analyzeButtonGradient = document.getElementById('analyzeButtonEyedropper');\r\n\r\nfunction initializeGradient() {\r\n    console.log(\"Initializing UI...\");\r\n\r\n    // Create a main container\r\n    const container = document.createElement('div');\r\n    container.className = 'coloora-container';\r\n    container.id = 'gradientContainer';\r\n    container.style.position = 'fixed';\r\n    container.style.top = '10%';\r\n    container.style.left = '50%';\r\n    container.style.transform = 'translateX(-50%)';\r\n    container.style.zIndex = '99999';\r\n    container.style.backgroundColor = 'rgba(50, 50, 50, 0.5)'; // Semi-transparent background\r\n    container.style.border = '0.5px solid #000';\r\n    container.style.padding = '20px';\r\n    container.style.borderRadius = '8px';\r\n    container.style.boxShadow = '0px 0px 10px rgba(0,0,0,0.8)';\r\n    container.style.display = 'flex';\r\n    container.style.justifyContent = 'space-between'; // To place child containers side by side\r\n    container.style.backdropFilter = 'blur(30px)'; // Apply blur effect\r\n\r\n    // Create close button (acts like a header)\r\n    const closeButton = document.createElement('button');\r\n    closeButton.innerText = 'X';\r\n    closeButton.style.position = 'absolute';\r\n    closeButton.style.top = '5px';\r\n    closeButton.style.right = '5px';\r\n    closeButton.style.background = 'red';\r\n    closeButton.style.color = 'white';\r\n    closeButton.style.border = 'none';\r\n    closeButton.style.borderRadius = '50%';\r\n    closeButton.style.width = '20px';\r\n    closeButton.style.height = '20px';\r\n    closeButton.style.cursor = 'pointer';\r\n    closeButton.onclick = () => {\r\n        document.body.removeChild(container);\r\n    };\r\n    container.appendChild(closeButton);\r\n\r\n    // Create a container for image, input link, and button\r\n    const imageInputContainerGradient = document.createElement('div');\r\n    imageInputContainerGradient.style.display = 'flex';\r\n    imageInputContainerGradient.style.flexDirection = 'column';\r\n    imageInputContainerGradient.style.flex = '1';\r\n    imageInputContainerGradient.style.display = 'flex'; // Added for centering\r\n    imageInputContainerGradient.style.justifyContent = 'center'; // Center horizontally\r\n    imageInputContainerGradient.style.alignItems = 'center'; // Center vertically\r\n    // imageInputContainerGradient.style.marginRight = '20px'; // Space between the two child containers\r\n\r\n    // Create an image container\r\n    const imageContainer = document.createElement('div');\r\n    imageContainer.id = 'imageContainer';\r\n    imageContainer.style.margin = '10px 0 10px 0';\r\n    imageContainer.style.backgroundColor = 'transparent';\r\n    imageInputContainerGradient.appendChild(imageContainer);\r\n\r\n    // Set up the image container as a drop zone\r\n    imageContainer.textContent = 'Drag and drop image URL here';\r\n    imageContainer.style.fontSize = '14px';\r\n    imageContainer.style.color = '#fff';   \r\n    imageContainer.style.padding = '20px';\r\n    imageContainer.style.border = '2px dashed #ccc';\r\n    imageContainer.style.transition = 'background-color 0.3s'; // Add transition for smooth animation\r\n    imageContainer.style.display = 'flex'; // Add flex display\r\n    imageContainer.style.justifyContent = 'center'; // Center horizontally\r\n    imageContainer.style.alignItems = 'center'; // Center vertically\r\n\r\n    // Prevent dragging of the image container\r\n    imageContainer.addEventListener('dragstart', function(e) {\r\n        e.preventDefault();\r\n    });\r\n\r\n    // Handle drag over event\r\n    imageContainer.addEventListener('dragover', function(e) {\r\n        e.preventDefault();\r\n        imageContainer.style.backgroundColor = 'rgba(128, 128, 128, 0.5)'; // Semi-transparent grey overlay\r\n        imageContainer.style.border = '2px dashed #ccc';\r\n    });\r\n\r\n    // Handle drag leave event\r\n    imageContainer.addEventListener('dragleave', function(e) {\r\n        imageContainer.style.backgroundColor = 'transparent'; // Remove overlay\r\n        imageContainer.style.borderColor = '#ccc';\r\n        imageContainer.style.border = 'none';\r\n    });\r\n\r\n    // Handle drop event\r\n    imageContainer.addEventListener('drop', function(e) {\r\n        e.preventDefault();\r\n        imageContainer.style.backgroundColor = 'transparent'; // Remove overlay\r\n\r\n        // Get the URL from the dropped item\r\n        const url = e.dataTransfer.getData('text');\r\n        \r\n        // Display the image in the container\r\n        imageContainer.innerHTML = `<img src=\"${url}\" alt=\"Dropped Image\" style=\"max-width: 100%; max-height: 150px;\">`;\r\n\r\n        // Analyze the image\r\n        analyzeImage(url);\r\n        // Animate the visibility of colorBoxesContainer\r\n        imageContainer.style.border = 'none';\r\n        const img = imageContainer.querySelector('img');\r\n        if (img) {\r\n            // Prevent dragging of the image\r\n            img.addEventListener('mousedown', function(event) {\r\n                event.preventDefault();\r\n            });\r\n        }\r\n    });\r\n\r\n    // Create a div for input and button to make them inline\r\n    const inputContainer = document.createElement('div');\r\n    inputContainer.style.display = 'flex';\r\n    inputContainer.style.justifyContent = 'center';\r\n    \r\n    // // Create label for color boxes\r\n\r\n    // const label = document.createElement('label');\r\n    // label.innerText = 'Click to pick, right click to delete';\r\n    // label.style.color = '#fff';\r\n    // label.style.fontSize = '12px';\r\n    // label.style.marginTop = '10px';\r\n    // imageInputContainerGradient.appendChild(label);\r\n\r\n    container.appendChild(imageInputContainerGradient);\r\n\r\n    // Create a container for color boxes and label\r\n    const colorContainer = document.createElement('div');\r\n    colorContainer.style.display = 'flex';\r\n    colorContainer.style.flexDirection = 'column';\r\n    colorContainer.style.marginTop = '10px';\r\n    container.appendChild(colorContainer);\r\n    \r\n    // colorBoxesContainer.style.height = '200px';\r\n\r\n    // Append main container to the body\r\n    document.body.appendChild(container);\r\n\r\n    initializeDragAndDrop(container);\r\n}\r\n\r\n\r\nfunction initializeDragAndDrop(container) {\r\n    let isDragging = false;\r\n    let initialMouseX, initialMouseY;\r\n    let initialContainerX, initialContainerY;\r\n\r\n    container.addEventListener('mousedown', (e) => {\r\n        // Check if the target element is the image element\r\n        if (e.target.tagName.toLowerCase() === 'img') {\r\n            return;\r\n        }\r\n\r\n        isDragging = true;\r\n\r\n        // Record the initial mouse position\r\n        initialMouseX = e.clientX;\r\n        initialMouseY = e.clientY;\r\n\r\n        // Record the initial position of the container\r\n        initialContainerX = container.getBoundingClientRect().left + (container.offsetWidth / 2);\r\n        initialContainerY = container.getBoundingClientRect().top;\r\n\r\n        window.addEventListener('mousemove', onMouseMove);\r\n        document.addEventListener('mouseup', onMouseUp);\r\n    });\r\n\r\n    function onMouseMove(e) {\r\n        if (!isDragging) return;\r\n\r\n        // Calculate the movement\r\n        let dx = e.clientX - initialMouseX;\r\n        let dy = e.clientY - initialMouseY;\r\n\r\n        // Apply the movement to the container's position\r\n        container.style.left = `${initialContainerX + dx}px`;\r\n        container.style.top = `${initialContainerY + dy}px`;\r\n    }\r\n\r\n    function onMouseUp() {\r\n        window.removeEventListener('mousemove', onMouseMove);\r\n        document.removeEventListener('mouseup', onMouseUp);\r\n        isDragging = false;\r\n    }\r\n}\r\n\r\nfunction extractImageFromPage(url) {\r\n    return fetch(url)\r\n        .then(response => response.text())\r\n        .then(text => {\r\n            const parser = new DOMParser();\r\n            const doc = parser.parseFromString(text, 'text/html');\r\n            const imgElements = doc.querySelectorAll('img');\r\n            if (imgElements.length > 0) {\r\n                return imgElements[0].src;\r\n            }\r\n            throw new Error('No images found');\r\n        });\r\n}\r\n\r\n// Analyze image function: Fetch, downsample, analyze, and draw\r\nfunction analyzeImage(imageUrl) {\r\n    if (!imageUrl) {\r\n        shakeElement(imageUrlInputEyedropper);\r\n        return; // Terminate the function\r\n    }\r\n    // imageUrlInputEyedropper.value = '';\r\n\r\n    if (!imageUrl.match(/\\.(jpeg|jpg|gif|png)(\\?|$)/)) {\r\n        extractImageFromPage(imageUrl)\r\n            .then(directImageUrl => {\r\n                sendInitialEvent('loaded_image_eyedropper', 'eyedropperContainer');\r\n                sendImageForAnalysisEyedropper(directImageUrl);\r\n            })\r\n            .catch(error => {\r\n                shakeElement(imageUrlInputEyedropper);\r\n                console.error('Failed to extract direct image URL:', error);\r\n            });\r\n    } else {\r\n        sendInitialEvent('loaded_image_eyedropper', 'eyedropperContainer');\r\n        sendImageForAnalysisEyedropper(imageUrl);\r\n    }\r\n}\r\n\r\nfunction sendImageForAnalysisEyedropper(imageUrl) {\r\n    console.log(\"Sending image URL to Flask API:\", imageUrl);\r\n    // showLoadingGif();\r\n\r\n    // Endpoint where the Flask API is running.\r\n    // const flaskApiEndpoint = \"http://localhost:5000/fetch-image\"; //demo\r\n    const flaskApiEndpoint = \"https://coloora-400822.et.r.appspot.com/fetch-image\";\r\n\r\n    fetch(flaskApiEndpoint, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ imageURL: imageUrl })\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.success && data.dataURL) {\r\n                // Create an image element\r\n                const img = new Image();\r\n                img.src = data.dataURL;\r\n                img.onload = function () {\r\n                    // Calculate the aspect ratio\r\n                    const aspectRatio = img.naturalWidth / img.naturalHeight;\r\n\r\n                    // Get half the viewport height\r\n                    const halfViewportHeight = window.innerHeight / 2;\r\n\r\n                    const colorBoxContainer = document.getElementById('colorBoxesContainer');\r\n\r\n                    // Get the image container\r\n                    const imageContainer = document.getElementById('imageContainer');\r\n\r\n                    // If the image's natural height exceeds half the viewport height, adjust its dimensions\r\n                    if (img.naturalHeight > halfViewportHeight) {\r\n                        img.height = halfViewportHeight;\r\n                        img.width = halfViewportHeight * aspectRatio;\r\n                    } else {\r\n                        img.width = img.naturalWidth;\r\n                        img.height = img.naturalHeight;\r\n                    }\r\n                        \r\n                    // Set the image container dimensions\r\n                    imageContainer.style.width = `${img.width}px`;\r\n                    imageContainer.style.height = `${img.height}px`;\r\n\r\n                    // Remove any previous images\r\n                    imageContainer.innerHTML = '';\r\n\r\n                    // Append the new image\r\n                    imageContainer.appendChild(img);\r\n                }\r\n            }\r\n            else {\r\n                console.error(\"Error:\", data.error);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Network Error:\", error);\r\n        });\r\n}\r\n\r\n// Adopt Content Script Behavior\r\nchrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\r\n    if (request.action === \"toggleGradient\") {\r\n        // initializeGradient();\r\n        alert(\"Feature coming soon\");\r\n        sendInitialEvent('gradient_clicked', 'gradientContainer');\r\n    }\r\n});\r\n\r\n// // This function will create the UI if it does not exist, or toggle its visibility\r\n// function toggleUI() {\r\n//     let gradientContainer = document.getElementById('gradientContainer');\r\n//     console.log('inside toggle')\r\n\r\n//     if (!gradientContainer) {\r\n//         initializeGradient();\r\n//     } else {\r\n//         // Toggle the visibility of the UI\r\n//         gradientContainer.style.visibility = 'visible';\r\n//         gradientContainer.style.opacity = '1';\r\n//     }\r\n// }\r\n\r\n// // Listen for messages from the popup or background script\r\n// chrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {\r\n//     if (request.action === \"toggleColorWheel\") {\r\n//         console.log('inside chrome runtime message listener');\r\n//         toggleUI();\r\n//     }\r\n// });"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","clientId","getOrCreateClientId","_getOrCreateClientId","_callee","result","_context","chrome","storage","local","get","crypto","randomUUID","console","log","set","_sendInitialEvent","_callee2","eventName","elementId","_context2","t0","fetch","t1","t2","t3","JSON","t4","t5","t6","id","t7","client_id","event_name","event_params","t8","stringify","t9","headers","body","t10","document","getElementById","runtime","onMessage","addListener","request","sender","sendResponse","action","alert","_x","_x2","sendInitialEvent"],"sourceRoot":""}