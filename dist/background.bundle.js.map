{"version":3,"file":"background.bundle.js","mappings":"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","sources":["webpack://coloora-new-ext/./src/background.js"],"sourcesContent":["// importScripts('ExtPay.js') // dont enable until extpay issue is resolved\r\n\r\n// Colorwheel\r\nchrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\r\n    console.log(\"inside background.js for cw\");\r\n    if (request.action === \"executeColorWheelScript\") {\r\n        chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\r\n            if (tabs.length === 0) {\r\n                console.error('No active tab found.');\r\n                return;\r\n            }\r\n            const tabId = tabs[0].id;\r\n            \r\n            // First, inject the CSS file\r\n            chrome.scripting.insertCSS({\r\n                target: { tabId: tabId },\r\n                files: ['styles/style-cs.css'] \r\n            }, () => {\r\n                // Then, inject the JavaScript file\r\n                chrome.scripting.executeScript({\r\n                    target: { tabId: tabId },\r\n                    files: ['colorwheel.bundle.js']\r\n                }, () => {\r\n                    if (chrome.runtime.lastError) {\r\n                        console.error(chrome.runtime.lastError.message);\r\n                        return;\r\n                    }\r\n                    // After injecting the content script, send the message\r\n                    chrome.tabs.sendMessage(tabId, { action: \"toggleColorWheel\" });\r\n                });\r\n            });\r\n        });\r\n    }\r\n});\r\n\r\n\r\n// Palette\r\nchrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\r\n    if (request.action === \"executeColorPaletteScript\") {\r\n        chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\r\n            if (tabs.length === 0) {\r\n                console.error('No active tab found.');\r\n                return;\r\n            }\r\n            const tabId = tabs[0].id;\r\n            \r\n            // First, inject the CSS file\r\n            chrome.scripting.insertCSS({\r\n                target: { tabId: tabId },\r\n                files: ['styles/style-cs.css'] \r\n            }, () => {\r\n                // Then, inject the JavaScript file\r\n                chrome.scripting.executeScript({\r\n                    target: { tabId: tabId },\r\n                    files: ['palette.bundle.js']\r\n                }, () => {\r\n                    if (chrome.runtime.lastError) {\r\n                        console.error(chrome.runtime.lastError.message);\r\n                        return;\r\n                    }\r\n                    // After injecting the content script, send the message\r\n                    chrome.tabs.sendMessage(tabId, { action: \"togglePalette\" });\r\n                });\r\n            });\r\n        });\r\n    }\r\n});\r\n\r\n\r\n// Eyedropper\r\nchrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\r\n    if (request.action === \"executeEyedropper\") {\r\n        chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\r\n            if (tabs.length === 0) {\r\n                console.error('No active tab found.');\r\n                return;\r\n            }\r\n            const tabId = tabs[0].id;\r\n            \r\n            // First, inject the CSS file\r\n            chrome.scripting.insertCSS({\r\n                target: { tabId: tabId },\r\n                files: ['styles/style-cs.css'] \r\n            }, () => {\r\n                // Then, inject the JavaScript file\r\n                chrome.scripting.executeScript({\r\n                    target: { tabId: tabId },\r\n                    files: ['eyedropper.bundle.js']\r\n                }, () => {\r\n                    if (chrome.runtime.lastError) {\r\n                        console.error(chrome.runtime.lastError.message);\r\n                        return;\r\n                    }\r\n                    // After injecting the content script, send the message\r\n                    chrome.tabs.sendMessage(tabId, { action: \"toggleEyedropper\" });\r\n                });\r\n            });\r\n        });\r\n    }\r\n});\r\n\r\n\r\nchrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\r\n    if (request.action === \"executeGradient\") {\r\n        chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\r\n            const tabId = tabs[0].id;\r\n            chrome.scripting.executeScript({\r\n                target: { tabId: tabId },\r\n                files: ['gradient.js']\r\n            }, () => {\r\n                // After injecting the content script, send the message\r\n                chrome.tabs.sendMessage(tabId, { action: \"createGradient\" });\r\n            });\r\n        });\r\n    }\r\n});\r\n\r\nchrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\r\n    if (request.action === \"executeGradient\") {\r\n        chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\r\n            if (tabs.length === 0) {\r\n                console.error('No active tab found.');\r\n                return;\r\n            }\r\n            const tabId = tabs[0].id;\r\n            \r\n            // First, inject the CSS file\r\n            chrome.scripting.insertCSS({\r\n                target: { tabId: tabId },\r\n                files: ['styles/style-cs.css'] \r\n            }, () => {\r\n                // Then, inject the JavaScript file\r\n                chrome.scripting.executeScript({\r\n                    target: { tabId: tabId },\r\n                    files: ['gradient.bundle.js']\r\n                }, () => {\r\n                    if (chrome.runtime.lastError) {\r\n                        console.error(chrome.runtime.lastError.message);\r\n                        return;\r\n                    }\r\n                    // After injecting the content script, send the message\r\n                    chrome.tabs.sendMessage(tabId, { action: \"toggleGradient\" });\r\n                });\r\n            });\r\n        });\r\n    }\r\n});\r\n\r\n// var extpay = ExtPay('phdgnljpgjngdcmkfoakcechbmikjmok'); \r\n// extpay.startBackground(); \r\n\r\n// chrome.action.onClicked.addListener(function (tab) {\r\n//     chrome.scripting.executeScript({\r\n//         target: { tabId: tab.id },\r\n//         files: ['color-wheel.js']\r\n//     }, () => {\r\n//         // After injecting the content script, send the message\r\n//         chrome.tabs.sendMessage(tab.id, { action: \"showColorWheel\" });\r\n//     });\r\n// });\r\n\r\n"],"names":["chrome","runtime","onMessage","addListener","request","sender","sendResponse","console","log","action","tabs","query","active","currentWindow","length","tabId","id","scripting","insertCSS","target","files","executeScript","lastError","error","message","sendMessage"],"sourceRoot":""}