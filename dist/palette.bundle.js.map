{"version":3,"file":"palette.bundle.js","mappings":";sQACAA,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,EAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,UAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAA8E,QAAA,KAAAvE,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAA8E,QAAA,GAAAzE,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,EAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA2C,YAAA7D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAAgF,oBAAA,SAAA/E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAgF,YAAA,QAAAjF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA+E,aAAA/E,EAAAkF,MAAA,EAAAlF,EAAAmF,KAAA,SAAAlF,GAAA,OAAAE,OAAAiF,eAAAjF,OAAAiF,eAAAnF,EAAAoC,IAAApC,EAAAoF,UAAAhD,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAsF,MAAA,SAAArF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAuF,MAAA,SAAAtF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA8E,SAAA,IAAA5E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAAgF,oBAAA9E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAyF,KAAA,SAAAxF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAwF,UAAA,SAAAzB,IAAA,KAAA/D,EAAA4E,QAAA,KAAA7E,EAAAC,EAAAyF,MAAA,GAAA1F,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA6E,YAAAxD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA4F,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA2F,OAAA,IAAAxF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA4F,MAAA,WAAA5F,GAAAD,EAAA,EAAA8F,KAAA,gBAAAxC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAmE,IAAA,EAAAnC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA+F,EAAA5F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAAM,OAAA,EAAAvE,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA6B,EAAA,UAAAvF,EAAA0D,QAAA,KAAAwB,KAAA,KAAA9E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA4E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,WAAAuB,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA8E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,YAAArD,EAAA,UAAAsC,MAAA,kDAAAsC,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAAM,OAAA,EAAA5E,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAwB,MAAAvF,EAAAyB,KAAAvB,EAAA,oBAAAqF,KAAArF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA+D,SAAAtF,EAAA,EAAAsF,SAAA,SAAAjG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAoE,KAAA,KAAAnE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAAgE,OAAA,SAAAlG,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAiG,SAAAhG,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,YAAA+C,MAAA,0BAAA8C,cAAA,SAAApG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAqG,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAAC,EAAA7E,GAAA,QAAA8E,EAAAL,EAAAI,GAAA7E,GAAApB,EAAAkG,EAAAlG,KAAA,OAAAmG,GAAA,YAAAL,EAAAK,EAAA,CAAAD,EAAApD,KAAAL,EAAAzC,GAAA+E,QAAAtC,QAAAzC,GAAA2C,KAAAoD,EAAAC,EAAA,UAAAI,EAAAC,GAAA,sBAAAC,EAAA,KAAAC,EAAAC,UAAA,WAAAzB,SAAA,SAAAtC,EAAAqD,GAAA,IAAAD,EAAAQ,EAAAI,MAAAH,EAAAC,GAAA,SAAAR,EAAA/F,GAAA4F,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAA,OAAAhG,EAAA,UAAAgG,EAAAU,GAAAd,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAA,QAAAU,EAAA,CAAAX,OAAAY,EAAA,KADA,IAEIC,EAFAC,EAAiB,yDAER,SAEEC,IAAmB,OAAAC,EAAAN,MAAC,KAADD,UAAA,UAAAO,IAiBjC,OAjBiCA,EAAAX,EAAA9G,IAAAoF,MAAlC,SAAAsC,IAAA,IAAAC,EAAA,OAAA3H,IAAAuB,MAAA,SAAAqG,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA1D,MAAA,WACQoD,EAAU,CAAFM,EAAA1D,KAAA,eAAA0D,EAAA7D,OAAA,SACDuD,GAAQ,cAAAM,EAAA1D,KAAA,EAGE2D,OAAOC,QAAQC,MAAMC,IAAI,YAAW,OAC9B,GADrBL,EAAMC,EAAAhE,KACZ0D,EAAWK,EAAOL,SAEH,CAAFM,EAAA1D,KAAA,SAGwB,OADjCoD,EAAWN,KAAKiB,OAAOC,aACvBC,QAAQC,IAAI,sBAAqBR,EAAA1D,KAAA,GAC3B2D,OAAOC,QAAQC,MAAMM,IAAI,CAAEf,SAAAA,IAAW,QAG3B,OAArBa,QAAQC,IAAId,GAASM,EAAA7D,OAAA,SACduD,GAAQ,yBAAAM,EAAA5B,OAAA,GAAA0B,EAAA,MAClBP,MAAA,KAAAD,UAAA,UAEcoB,EAAgBC,EAAAC,GAAA,OAAAC,EAAAtB,MAAC,KAADD,UAAA,UAAAuB,IA8B9B,OA9B8BA,EAAA3B,EAAA9G,IAAAoF,MAA/B,SAAAsD,EAAgCC,EAAWC,GAAS,OAAA5I,IAAAuB,MAAA,SAAAsH,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA3E,MAAA,OACd,OAAlCiE,QAAQC,IAAI,sBAAsBS,EAAA3E,KAAA,EACjBsD,IAAqB,OAA9B,GACS,0CADjBF,EAAQuB,EAAAjF,MAC+C,CAAAiF,EAAA3E,KAAA,SAS7B,OAT6B2E,EAAAhD,KAAA,EAAAgD,EAAAC,GAE/CC,MAAKF,EAAAG,GACDzB,EAAcsB,EAAAI,GAGD,CACL,eAAgB,oBACnBJ,EAAAK,GACKC,KAAIN,EAAA3E,KAAA,GACWsD,IAAqB,QAAAqB,EAAAO,GAAAP,EAAAjF,KAAAiF,EAAAQ,GAC1BV,EAASE,EAAAS,GACP,CACVC,GAAIX,GACPC,EAAAW,GAAA,CAJDC,UAASZ,EAAAO,GACTM,WAAUb,EAAAQ,GACVM,aAAYd,EAAAS,IAAAT,EAAAe,GAAAf,EAAAK,GAHLW,UAAS9H,KAAA8G,EAAAK,GAAAL,EAAAW,IAAAX,EAAAiB,GAAA,CAJpBrG,OAAQ,OACRsG,QAAOlB,EAAAI,GAGPe,KAAInB,EAAAe,KAAA,EAAAf,EAAAC,IAAAD,EAAAG,GAAAH,EAAAiB,IASZ3B,QAAQC,IAAI,cAAcS,EAAA3E,KAAA,iBAAA2E,EAAAhD,KAAA,GAAAgD,EAAAoB,IAAApB,EAAA,SAG1BV,QAAQtB,MAAM,sCAAqCgC,EAAAoB,KAAS,QAAApB,EAAA3E,KAAA,iBAGvB,OAAzCiE,QAAQC,IAAI,6BAA6BS,EAAA9E,OAAA,mCAAA8E,EAAA7C,OAAA,GAAA0C,EAAA,oBAGhDvB,MAAA,KAAAD,UAAA,oPCpDDlH,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,EAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,UAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAA8E,QAAA,KAAAvE,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAA8E,QAAA,GAAAzE,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,EAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA2C,YAAA7D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAAgF,oBAAA,SAAA/E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAgF,YAAA,QAAAjF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA+E,aAAA/E,EAAAkF,MAAA,EAAAlF,EAAAmF,KAAA,SAAAlF,GAAA,OAAAE,OAAAiF,eAAAjF,OAAAiF,eAAAnF,EAAAoC,IAAApC,EAAAoF,UAAAhD,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAsF,MAAA,SAAArF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAuF,MAAA,SAAAtF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA8E,SAAA,IAAA5E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAAgF,oBAAA9E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAyF,KAAA,SAAAxF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAwF,UAAA,SAAAzB,IAAA,KAAA/D,EAAA4E,QAAA,KAAA7E,EAAAC,EAAAyF,MAAA,GAAA1F,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA6E,YAAAxD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA4F,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA2F,OAAA,IAAAxF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA4F,MAAA,WAAA5F,GAAAD,EAAA,EAAA8F,KAAA,gBAAAxC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAmE,IAAA,EAAAnC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA+F,EAAA5F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAAM,OAAA,EAAAvE,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA6B,EAAA,UAAAvF,EAAA0D,QAAA,KAAAwB,KAAA,KAAA9E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA4E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,WAAAuB,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA8E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,YAAArD,EAAA,UAAAsC,MAAA,kDAAAsC,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAAM,OAAA,EAAA5E,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAwB,MAAAvF,EAAAyB,KAAAvB,EAAA,oBAAAqF,KAAArF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA+D,SAAAtF,EAAA,EAAAsF,SAAA,SAAAjG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAoE,KAAA,KAAAnE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAAgE,OAAA,SAAAlG,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAiG,SAAAhG,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,YAAA+C,MAAA,0BAAA8C,cAAA,SAAApG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAqG,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAAC,EAAA7E,GAAA,QAAA8E,EAAAL,EAAAI,GAAA7E,GAAApB,EAAAkG,EAAAlG,KAAA,OAAAmG,GAAA,YAAAL,EAAAK,EAAA,CAAAD,EAAApD,KAAAL,EAAAzC,GAAA+E,QAAAtC,QAAAzC,GAAA2C,KAAAoD,EAAAC,EAAA,CAqBA,SAAAwD,IArBA,IAAAnD,EAmBC,OAnBDA,EAqBA/G,IAAAoF,MAnBA,SAAAsC,EAAoCyC,GAAG,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAxK,IAAAuB,MAAA,SAAAqG,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA1D,MAAA,OACL,OAA9BiE,QAAQC,IAAI,kBAAkBR,EAAA1D,KAAA,EACP6E,MAAMoB,GAAI,OAAnB,OAARC,EAAQxC,EAAAhE,KAAAgE,EAAA1D,KAAG,EACEkG,EAASC,OAAM,OAIlC,GAJMA,EAAIzC,EAAAhE,KACJ0G,EAAS,IAAIG,UACbF,EAAMD,EAAOI,gBAAgBL,EAAM,gBACnCG,EAAcD,EAAII,iBAAiB,QAEzB5F,OAAS,GAAC,CAAA6C,EAAA1D,KAAA,SACkB,GAAxCiE,QAAQC,IAAI,cAAeoC,IACvBI,UAAUC,SAASC,SAAS,OAAQ,CAAFlD,EAAA1D,KAAA,gBAAA0D,EAAA7D,OAAA,SAC3ByG,EAAY,GAAGO,KAAG,eAAAnD,EAAA7D,OAAA,SAElByG,EAAY,GAAGO,KAAG,cAG3B,IAAIxH,MAAM,mBAAkB,yBAAAqE,EAAA5B,OAAA,GAAA0B,EAAA,IAGtCwC,EArBA,eAAAlD,EAAA,KAAAC,EAAAC,UAAA,WAAAzB,SAAA,SAAAtC,EAAAqD,GAAA,IAAAD,EAAAQ,EAAAI,MAAAH,EAAAC,GAAA,SAAAR,EAAA/F,GAAA4F,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAA,OAAAhG,EAAA,UAAAgG,EAAAU,GAAAd,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAA,QAAAU,EAAA,CAAAX,OAAAY,EAAA,KAmBC6C,EAAA/C,MAAA,KAAAD,UAAA,CCjBDoB,EAAiB,iBAAkB,qBAGnCH,QAAQC,IAAI,oBACZ,IAAI4C,EAAuBC,SAASC,eAAe,YAC/CC,EAAuBF,SAASC,eAAe,wBA4HnD,SAASE,EAAqBC,GAC1BlD,QAAQC,IAAI,kCAAmCiD,GAQ/CtC,MAHyB,2DAGD,CACpBtF,OAAQ,OACRsG,QAAS,CACL,eAAgB,oBAEpBC,KAAMb,KAAKU,UAAU,CAAEyB,SAAUD,MAEhChI,MAAK,SAAA+G,GAAQ,OAAIA,EAASmB,MAAM,IAChClI,MAAK,SAAAmI,GACF,GAAIA,EAAKC,SAAWD,EAAKE,QAAS,CAC9BvD,QAAQC,IAAI,sBACZ,IAAMuD,EAAaV,SAASN,iBAAiB,aAC7Ca,EAAKE,QAAQ5I,SAAQ,SAAC8I,EAAOC,GACzB,IAAMC,EAAW,OAAHC,OAAUH,EAAM,GAAE,MAAAG,OAAKH,EAAM,GAAE,MAAAG,OAAKH,EAAM,GAAE,KAC1DzD,QAAQC,IAAI,SAAD2D,OAAUF,EAAQ,EAAC,MAAAE,OAAKD,IACnCH,EAAWE,GAAOG,MAAMC,gBAAkBH,CAC9C,GACJ,MACI3D,QAAQC,IAAI,iBACZD,QAAQtB,MAAM,SAAU2E,EAAK3E,MAErC,IAAE,OACK,SAAAA,GACHsB,QAAQtB,MAAM,iBAAkBA,EACpC,GACR,CA8BA,SAASqF,IACL,IAAIC,EAAoBlB,SAASC,eAAe,qBAChD/C,QAAQC,IAAI,iBAEP+D,GAIDA,EAAkBH,MAAMI,WAAa,UACrCD,EAAkBH,MAAMK,QAAU,KAnM1C,WACIlE,QAAQC,IAAI,sBAEZ,IAAMkE,EAAYrB,SAASsB,cAAc,OACzCD,EAAUE,UAAY,oBACtBF,EAAU/C,GAAK,mBAGf,IAAMkD,EAAcxB,SAASsB,cAAc,UAC3CE,EAAYD,UAAY,eACxBC,EAAYC,UAAY,IACxBD,EAAYE,QAAU,WAClB1B,SAASjB,KAAK4C,YAAYN,EAC9B,EACAA,EAAUO,YAAYJ,GAGtB,IAAMK,EAA4B7B,SAASsB,cAAc,OACzDO,EAA0BN,UAAY,+BACtCM,EAA0BvD,GAAK,4BAG/B,IAAM4C,EAAoBlB,SAASsB,cAAc,OACjDJ,EAAkBK,UAAY,sBAC9BL,EAAkB5C,GAAK,oBAGvB,IAAMwD,EAAY9B,SAASsB,cAAc,UACzCQ,EAAUP,UAAY,aACtBO,EAAUL,UAAY,IACtBK,EAAUJ,QAAU,WAChBK,MAAM,wBACN1E,EAAiB,+BAAgC,YACrD,EACAwE,EAA0BD,YAAYV,GACtCW,EAA0BD,YAAYE,GACtCT,EAAUO,YAAYC,GAGtB,IAAK,IAAInM,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAMsM,EAAWhC,SAASsB,cAAc,OACxCU,EAAST,UAAY,WACrBS,EAASjB,MAAMkB,MAAQ,OACvBD,EAASjB,MAAMmB,OAAS,OACxBF,EAASjB,MAAMC,gBAAkB,OACjCE,EAAkBU,YAAYI,EAClC,CAGA,IACIG,EAAeC,EACfC,EAAmBC,EAFnBC,GAAa,EAoBjB,SAASC,EAAYxN,GACjB,GAAKuN,EAAL,CAGA,IAAIE,EAAKzN,EAAE0N,QAAUP,EACjBQ,EAAK3N,EAAE4N,QAAUR,EAGrBf,EAAUN,MAAM8B,KAAO,GAAH/B,OAAMuB,EAAoBI,EAAE,MAChDpB,EAAUN,MAAM+B,IAAM,GAAHhC,OAAMwB,EAAoBK,EAAE,KARxB,CAS3B,CAEA,SAASI,IACLC,OAAOC,oBAAoB,YAAaT,GACxCQ,OAAOC,oBAAoB,UAAWF,GACtCR,GAAa,CACjB,CAhCAlB,EAAU6B,iBAAiB,aAAa,SAAClO,GACrCuN,GAAa,EAGbJ,EAAgBnN,EAAE0N,QAClBN,EAAgBpN,EAAE4N,QAIlBP,EAAoBhB,EAAU8B,wBAAwBN,KAAQxB,EAAU+B,YAAc,EACtFd,EAAoBjB,EAAU8B,wBAAwBL,IAEtDE,OAAOE,iBAAiB,YAAaV,GACrCQ,OAAOE,iBAAiB,UAAWH,EACvC,IAqBA,IAAMM,EAAiBrD,SAASsB,cAAc,OAC9C+B,EAAe9B,UAAY,mBAG3BxB,EAAuBC,SAASsB,cAAc,UACzBC,UAAY,kBACjCxB,EAAqBzB,GAAK,WAC1ByB,EAAqBnJ,KAAO,OAC5BmJ,EAAqBuD,YAAc,kBACnCD,EAAezB,YAAY7B,IAG3BG,EAAuBF,SAASsB,cAAc,WACzBhD,GAAK,uBAC1B4B,EAAqBuB,UAAY,gBACjCvB,EAAqBwB,QAAU,YD1FnC,SAAsBtB,EAAU/C,EAAkBkG,EAAOjF,EAAI6B,GACpDC,IAKAA,EAASoD,MAAM,+BAUhBnG,EAAiBkG,EAAOjF,GACxB6B,EAAqBC,IAxCoB,SAGd9C,GAAA,OAAA2B,EAAA/C,MAAC,KAADD,UAAA,CA2B3BwH,CAAqBrD,GAChBhI,MAAK,SAAAsL,GACFrG,EAAiBkG,EAAOjF,GACxB6B,EAAqBuD,EACzB,IAAE,OACK,SAAA9H,GACHsB,QAAQtB,MAAM,sCAAuCA,EACzD,IAKZ,ECyEQ+H,CACI5D,EAAqBtK,MACrB4H,EACA,oBACA,uBACA8C,GAEJJ,EAAqBtK,MAAQ,EACjC,EACA4N,EAAezB,YAAY1B,GAG3BmB,EAAUO,YAAYyB,GACtBrD,SAASjB,KAAK6C,YAAYP,EAE9B,CAuEQuC,EAMR,CAGAhH,OAAOiH,QAAQC,UAAUC,aAAY,SAASC,EAASC,EAAQC,GACpC,kBAAnBF,EAAQG,SACRjH,QAAQC,IAAI,0CACZ8D,IAER","sources":["webpack://coloora-new-ext/./src/modules/gaAnalytics.js","webpack://coloora-new-ext/./src/modules/imageAnalysis.js","webpack://coloora-new-ext/./src/cs/palette.js"],"sourcesContent":["var FLASK_ENDPOINT = 'https://coloora-400822.et.r.appspot.com/send-analytics';\r\n\r\nlet clientId;\r\n\r\nasync function getOrCreateClientId() {\r\n    if (clientId) {\r\n        return clientId;\r\n    }\r\n\r\n    const result = await chrome.storage.local.get('clientId');\r\n    clientId = result.clientId;\r\n\r\n    if (!clientId) {\r\n        // Generate a unique client ID, the actual value is not relevant\r\n        clientId = self.crypto.randomUUID();\r\n        console.log('generated clientid')\r\n        await chrome.storage.local.set({ clientId });\r\n    }\r\n\r\n    console.log(clientId)\r\n    return clientId;\r\n}\r\n\r\nasync function sendInitialEvent(eventName, elementId) {\r\n    console.log(\"inside gaanalytics\");\r\n    clientId = await getOrCreateClientId();\r\n    if (clientId !== \"a1e0c334-cbc9-43bf-8de0-16d4a4f89ab7\") {\r\n        try {\r\n            fetch(\r\n                FLASK_ENDPOINT,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        client_id: await getOrCreateClientId(),\r\n                        event_name: eventName,\r\n                        event_params: {\r\n                            id: elementId,\r\n                        },\r\n                    }),\r\n                }\r\n            );\r\n            console.log(\"event sent\");\r\n        }\r\n        catch (error) {\r\n            console.error(\"Error sending data to Flask server:\", error);\r\n        }\r\n    } else {\r\n        console.log(\"demo user, event not sent\");\r\n        return;\r\n    }\r\n}\r\n\r\nexport { sendInitialEvent };\r\n","import { sendInitialEvent } from './gaAnalytics';\r\n\r\n\r\nasync function extractImageFromPage(url) {\r\n    console.log('inside extract');\r\n    const response = await fetch(url); // Fetch the page\r\n    const text = await response.text(); // Get the page content as text\r\n    const parser = new DOMParser(); // Create a DOM parser\r\n    const doc = parser.parseFromString(text, 'text/html'); // Parse the page\r\n    const imgElements = doc.querySelectorAll('img'); // Find all image elements\r\n    // Return the first or second image's src attribute based on the OS\r\n    if (imgElements.length > 0) { \r\n        console.log('imgElements', imgElements);\r\n        if (navigator.platform.includes('Mac')) {\r\n            return imgElements[1].src;\r\n        } else {\r\n            return imgElements[0].src;\r\n        }\r\n    }\r\n    throw new Error('No images found');\r\n}\r\n\r\n// Analyze image function: Fetch, downsample, analyze, and draw\r\nfunction analyzeImage(imageUrl, sendInitialEvent, event, id, sendImageForAnalysis ) {\r\n    if (!imageUrl) {\r\n        return; // Terminate the function\r\n    }\r\n\r\n    // Check if the URL is a direct link to an image\r\n    if (!imageUrl.match(/\\.(jpeg|jpg|gif|png)(\\?|$)/)) {\r\n        extractImageFromPage(imageUrl) \r\n            .then(directImageUrl => {\r\n                sendInitialEvent(event, id); \r\n                sendImageForAnalysis(directImageUrl);\r\n            })\r\n            .catch(error => {\r\n                console.error('Failed to extract direct image URL:', error);\r\n            });\r\n    } else {\r\n        sendInitialEvent(event, id);\r\n        sendImageForAnalysis(imageUrl); \r\n    }\r\n}\r\n\r\nexport function fetchImageData(imageUrl, onSuccess, onError) {\r\n    console.log(\"inside imageanalysis.js\");\r\n    console.log(\"Sending image URL to Flask API:\", imageUrl);\r\n\r\n    const flaskApiEndpoint = \"https://coloora-400822.et.r.appspot.com/fetch-image\"; // prod\r\n\r\n    fetch(flaskApiEndpoint, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ imageURL: imageUrl })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        if (data.success && data.dataURL) {\r\n            onSuccess(data.dataURL);\r\n        } else {\r\n            onError('Image analysis failed: ' + data.error);\r\n        }\r\n    })\r\n    .catch(error => {\r\n        onError('Network error: ' + error.message);\r\n    });\r\n}\r\n\r\n// function checkDataTypes() {\r\n//     // Check for different types of data\r\n//     if (e.dataTransfer.types.includes('text/uri-list')) {\r\n//         // Handle URI list (common for links)\r\n//         const url = e.dataTransfer.getData('text/uri-list');\r\n//         console.log('Dropped URL:', url);\r\n//         // Display the image in the container\r\n//         imageContainer.innerHTML = `<img src=\"${url}\" alt=\"Dropped Image\" style=\"max-width: 100%; max-height: 150px;\">`;\r\n\r\n//         // Analyze the image\r\n//         analyzeImage(url);\r\n//     } else if (e.dataTransfer.types.includes('text/html')) {\r\n//         // Handle HTML (common for rich content)\r\n//         const htmlContent = e.dataTransfer.getData('text/html');\r\n//         const doc = new DOMParser().parseFromString(htmlContent, 'text/html');\r\n//         const imgSrc = doc.querySelector('img') ? doc.querySelector('img').src : null;\r\n//         if (imgSrc) {\r\n//             console.log('Extracted Image URL from HTML:', imgSrc);\r\n//             // Display the image in the container\r\n//             imageContainer.innerHTML = `<img src=\"${url}\" alt=\"Dropped Image\" style=\"max-width: 100%; max-height: 150px;\">`;\r\n\r\n//             // Analyze the image\r\n//             analyzeImage(url);\r\n//         }\r\n//     } else if (e.dataTransfer.types.includes('text/plain')) {\r\n//         // Handle plain text (fallback)\r\n//         const url = e.dataTransfer.getData('text/plain');\r\n//         console.log('Extracted URL from text:', url);\r\n//         // Display the image in the container\r\n//         imageContainer.innerHTML = `<img src=\"${url}\" alt=\"Dropped Image\" style=\"max-width: 100%; max-height: 150px;\">`;\r\n\r\n//         // Analyze the image\r\n//         analyzeImage(url);\r\n//     }\r\n// }\r\n\r\n\r\nexport { extractImageFromPage,analyzeImage };","import { sendInitialEvent } from '../modules/gaAnalytics';\r\nimport { extractImageFromPage, analyzeImage } from '../modules/imageAnalysis';\r\n\r\nsendInitialEvent('palette_loaded', 'colorBoxContainer');\r\n\r\n// Initialization: Setting up the UI\r\nconsole.log(\"palette  loaded!\");\r\nlet imageUrlInputPalette = document.getElementById('imageUrl');\r\nlet analyzeButtonPalette = document.getElementById('analyzeButtonPalette');\r\n\r\nfunction initializeUIPalette() {\r\n    console.log(\"Initializing UI...\");\r\n    // Create a container for the color wheel\r\n    const container = document.createElement('div');\r\n    container.className = 'coloora-container';\r\n    container.id = 'paletteContainer';\r\n\r\n    // Create close button (acts like a header)\r\n    const closeButton = document.createElement('button');\r\n    closeButton.className = 'close-button';\r\n    closeButton.innerText = 'X';\r\n    closeButton.onclick = () => {\r\n        document.body.removeChild(container);\r\n    };\r\n    container.appendChild(closeButton);\r\n\r\n    // Create a new container for palette and button\r\n    const paletteAndButtonContainer = document.createElement('div');\r\n    paletteAndButtonContainer.className = 'palette-and-button-container';\r\n    paletteAndButtonContainer.id = 'paletteAndButtonContainer';\r\n\r\n    // Create palette container for color boxes\r\n    const colorBoxContainer = document.createElement('div');\r\n    colorBoxContainer.className = 'color-box-container';\r\n    colorBoxContainer.id = 'colorBoxContainer';\r\n\r\n    // Create a button for adding colors\r\n    const addButton = document.createElement('button');\r\n    addButton.className = 'add-button'; //fix this\r\n    addButton.innerText = '+';\r\n    addButton.onclick = () => {\r\n        alert('Feature coming soon!');\r\n        sendInitialEvent(\"auto_palette_add_color_29_11\", \"addButton\"); // Calling the async function immediately\r\n    };\r\n    paletteAndButtonContainer.appendChild(colorBoxContainer);\r\n    paletteAndButtonContainer.appendChild(addButton);\r\n    container.appendChild(paletteAndButtonContainer);\r\n\r\n    // Create and append five color boxes to the palette container\r\n    for (let i = 0; i < 5; i++) {\r\n        const colorBox = document.createElement('div');\r\n        colorBox.className = 'colorBox';\r\n        colorBox.style.width = '40px';\r\n        colorBox.style.height = '40px';\r\n        colorBox.style.backgroundColor = 'grey'; // default color\r\n        colorBoxContainer.appendChild(colorBox);\r\n    }\r\n\r\n    // Drag and drop\r\n    let isDragging = false;\r\n    let initialMouseX, initialMouseY;\r\n    let initialContainerX, initialContainerY;\r\n\r\n    container.addEventListener('mousedown', (e) => {\r\n        isDragging = true;\r\n\r\n        // Record the initial mouse position\r\n        initialMouseX = e.clientX;\r\n        initialMouseY = e.clientY;\r\n\r\n        // Record the initial position of the container\r\n        // Adjusting for the transform offset\r\n        initialContainerX = container.getBoundingClientRect().left + (container.offsetWidth / 2);\r\n        initialContainerY = container.getBoundingClientRect().top;\r\n\r\n        window.addEventListener('mousemove', onMouseMove);\r\n        window.addEventListener('mouseup', onMouseUp);\r\n    });\r\n\r\n    function onMouseMove(e) {\r\n        if (!isDragging) return;\r\n\r\n        // Calculate the movement\r\n        let dx = e.clientX - initialMouseX;\r\n        let dy = e.clientY - initialMouseY;\r\n\r\n        // Apply the movement to the container's position, adjusting for the transform offset\r\n        container.style.left = `${initialContainerX + dx}px`;\r\n        container.style.top = `${initialContainerY + dy}px`;\r\n    }\r\n\r\n    function onMouseUp() {\r\n        window.removeEventListener('mousemove', onMouseMove);\r\n        window.removeEventListener('mouseup', onMouseUp);\r\n        isDragging = false;\r\n    }\r\n\r\n    // Create a div for input and button to make them inline\r\n    const inputContainer = document.createElement('div');\r\n    inputContainer.className = 'input-container';\r\n\r\n    // Create input for image URL\r\n    imageUrlInputPalette = document.createElement('input');\r\n    imageUrlInputPalette.className = 'image-url-input';\r\n    imageUrlInputPalette.id = 'imageUrl';\r\n    imageUrlInputPalette.type = 'text';\r\n    imageUrlInputPalette.placeholder = 'Enter image URL';\r\n    inputContainer.appendChild(imageUrlInputPalette);\r\n\r\n    // Create analyze button\r\n    analyzeButtonPalette = document.createElement('button');\r\n    analyzeButtonPalette.id = 'analyzeButtonPalette';\r\n    analyzeButtonPalette.innerText = 'Analyze Image';\r\n    analyzeButtonPalette.onclick = function () {\r\n        // analyzeImage(imageUrlInputPalette.value);/\r\n        analyzeImage(\r\n            imageUrlInputPalette.value,\r\n            sendInitialEvent,\r\n            \"palette_generated\",\r\n            \"analyzeButtonPalette\", \r\n            sendImageForAnalysis\r\n        );\r\n        imageUrlInputPalette.value = '';\r\n    };\r\n    inputContainer.appendChild(analyzeButtonPalette);\r\n\r\n    // Append inputContainer to main container\r\n    container.appendChild(inputContainer);\r\n    document.body.appendChild(container);\r\n\r\n}\r\n\r\nfunction sendImageForAnalysis(imageUrl) {\r\n    console.log(\"Sending image URL to Flask API:\", imageUrl);\r\n    // showLoadingGif();\r\n\r\n    // Endpoint where the Flask API is running.\r\n    // const flaskApiEndpoint = \"http://127.0.0.1:5000/generate-palette\"; //demo\r\n    const flaskApiEndpoint = \"https://coloora-400822.et.r.appspot.com/generate-palette\";\r\n\r\n\r\n    fetch(flaskApiEndpoint, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ imageURL: imageUrl })\r\n    })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.success && data.palette) {\r\n                console.log(\"Generated Palette:\");\r\n                const colorBoxes = document.querySelectorAll('.colorBox');\r\n                data.palette.forEach((color, index) => {\r\n                    const rgbColor = `rgb(${color[0]}, ${color[1]}, ${color[2]})`;\r\n                    console.log(`Color ${index + 1}: ${rgbColor}`);\r\n                    colorBoxes[index].style.backgroundColor = rgbColor;\r\n                });\r\n            } else {\r\n                console.log('entered error')\r\n                console.error(\"Error:\", data.error);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Network Error:\", error);\r\n        });\r\n}\r\n\r\nfunction shakeElement(element) {\r\n    console.log('Shake function called');\r\n    let shakes = 5;\r\n    let distance = 2; // in pixels\r\n\r\n    const originalMarginLeft = parseInt(window.getComputedStyle(element).marginLeft, 10) || 0;\r\n    const originalMarginRight = parseInt(window.getComputedStyle(element).marginRight, 10) || 0;\r\n\r\n    function animateShake() {\r\n        if (shakes === 0) {\r\n            element.style.marginLeft = `${originalMarginLeft}px`; // Reset to original margins\r\n            element.style.marginRight = `${originalMarginRight}px`;\r\n            return;\r\n        }\r\n\r\n        // Alternate direction for shaking effect\r\n        const offset = (shakes % 2 === 0) ? distance : -distance;\r\n        element.style.marginLeft = `${originalMarginLeft + offset}px`;\r\n        element.style.marginRight = `${originalMarginRight - offset}px`;\r\n\r\n        shakes -= 1;\r\n        setTimeout(animateShake, 50);\r\n    }\r\n\r\n    animateShake();\r\n}\r\n\r\n// This function will create the UI if it does not exist, or toggle its visibility\r\nfunction toggleUI() {\r\n    let colorBoxContainer = document.getElementById('colorBoxContainer');\r\n    console.log('inside toggle')\r\n\r\n    if (!colorBoxContainer) {\r\n        initializeUIPalette();\r\n    } else {\r\n        // Toggle the visibility of the UI\r\n        colorBoxContainer.style.visibility = 'visible';\r\n        colorBoxContainer.style.opacity = '1';\r\n    }\r\n}\r\n\r\n// Listen for messages from the popup or background script\r\nchrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {\r\n    if (request.action === \"togglePalette\") {\r\n        console.log('inside chrome runtime message listener');\r\n        toggleUI();\r\n    }\r\n});\r\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","clientId","FLASK_ENDPOINT","getOrCreateClientId","_getOrCreateClientId","_callee","result","_context","chrome","storage","local","get","crypto","randomUUID","console","log","set","sendInitialEvent","_x","_x2","_sendInitialEvent","_callee2","eventName","elementId","_context2","t0","fetch","t1","t2","t3","JSON","t4","t5","t6","id","t7","client_id","event_name","event_params","t8","stringify","t9","headers","body","t10","_extractImageFromPage","url","response","text","parser","doc","imgElements","DOMParser","parseFromString","querySelectorAll","navigator","platform","includes","src","imageUrlInputPalette","document","getElementById","analyzeButtonPalette","sendImageForAnalysis","imageUrl","imageURL","json","data","success","palette","colorBoxes","color","index","rgbColor","concat","style","backgroundColor","toggleUI","colorBoxContainer","visibility","opacity","container","createElement","className","closeButton","innerText","onclick","removeChild","appendChild","paletteAndButtonContainer","addButton","alert","colorBox","width","height","initialMouseX","initialMouseY","initialContainerX","initialContainerY","isDragging","onMouseMove","dx","clientX","dy","clientY","left","top","onMouseUp","window","removeEventListener","addEventListener","getBoundingClientRect","offsetWidth","inputContainer","placeholder","event","match","extractImageFromPage","directImageUrl","analyzeImage","initializeUIPalette","runtime","onMessage","addListener","request","sender","sendResponse","action"],"sourceRoot":""}